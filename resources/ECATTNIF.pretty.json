{
    "swagger": "2.0"
   ,"info": {
       "title": "U.S. EPA Enforcement and Compliance History Online (ECHO)"
      ,"contact": {
          "name": "US EPA, OECA Integration, Targeting and Access Branch"
      }
      ,"license": {
          "name": "This page was built with the Swagger API."
         ,"url": "https:\/\/swagger.io"
      }
      ,"version": "0.0.0"
   }
   ,"host": "echodata.epa.gov"
   ,"basePath": "\/echo"
   ,"schemes": [
       "https"
   ]
   ,"consumes": [
       "application\/x-www-form-urlencoded"
   ]
   ,"produces": [
       "application\/json"
      ,"application\/xml"
   ]
   ,"parameters": {
       "q.output": {
          "name": "output"
         ,"in": "query"
         ,"description": "Output Format Flag.  Enter one of the following keywords:\n- JSON = Data model formatted as Javascript Object Notation (default).\n- JSONP = Data model formatted as Javascript Object Notation with Padding.  \n- XML = Data model formatted as Extensible Markup Language."
         ,"enum": [
             "JSONP"
            ,"JSON"
            ,"XML"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.output": {
          "name": "output"
         ,"in": "formData"
         ,"description": "Output Format Flag.  Enter one of the following keywords:\n- JSON = Data model formatted as Javascript Object Notation (default).\n- JSONP = Data model formatted as Javascript Object Notation with Padding.  \n- XML = Data model formatted as Extensible Markup Language."
         ,"enum": [
             "JSONP"
            ,"JSON"
            ,"XML"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_id": {
          "name": "p_id"
         ,"in": "query"
         ,"description": "Identifier for the service."
         ,"type": "string"
         ,"required": true
      }
      ,"f.p_id": {
          "name": "p_id"
         ,"in": "formData"
         ,"description": "Identifier for the service."
         ,"type": "string"
         ,"required": true
      }
      ,"q.callback": {
          "name": "callback"
         ,"in": "query"
         ,"description": "JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response."
         ,"type": "string"
         ,"required": false
      }
      ,"f.callback": {
          "name": "callback"
         ,"in": "formData"
         ,"description": "JSONP Callback.  For use with JSONP and GEOJSONP output only.  Enter a name of the function in which to wrap the JSON response."
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_ct": {
          "name": "p_ct"
         ,"in": "query"
         ,"description": "Facility City Filter. Enter a single case-insensitive city name to filter results."
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_ct": {
          "name": "p_ct"
         ,"in": "formData"
         ,"description": "Facility City Filter. Enter a single case-insensitive city name to filter results."
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_fips": {
          "name": "p_fips"
         ,"in": "query"
         ,"description": "FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059."
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_fips": {
          "name": "p_fips"
         ,"in": "formData"
         ,"description": "FIPS Code Filter.  Enter a single 5-character Federal Information Processing Standards (FIPS) state + county value to restrict results.  E.g. to limit results to Kenosha County, Wisconsin, use 55059."
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_st": {
          "name": "p_st"
         ,"in": "query"
         ,"description": "Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list."
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_st": {
          "name": "p_st"
         ,"in": "formData"
         ,"description": "Facility State and State-Equivalent Filter.  Provide one or more USPS postal abbreviations for states and state-equivalents to filter results.  Provide multiple values as a comma-delimited list."
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_zip": {
          "name": "p_zip"
         ,"in": "query"
         ,"description": "5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values."
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_zip": {
          "name": "p_zip"
         ,"in": "formData"
         ,"description": "5-Digit ZIP Code Filter. Provide one or more 5-digit postal zip codes to filter results.  May contain multiple comma-separated values."
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_reg": {
          "name": "p_reg"
         ,"in": "query"
         ,"description": "EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region."
         ,"enum": [
             "01"
            ,"02"
            ,"03"
            ,"04"
            ,"05"
            ,"06"
            ,"07"
            ,"08"
            ,"09"
            ,"10"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_reg": {
          "name": "p_reg"
         ,"in": "formData"
         ,"description": "EPA Region Filter. Provide a single value of 01 thru 10 to restrict results to a single EPA region."
         ,"enum": [
             "01"
            ,"02"
            ,"03"
            ,"04"
            ,"05"
            ,"06"
            ,"07"
            ,"08"
            ,"09"
            ,"10"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_ncs": {
          "name": "p_ncs"
         ,"in": "query"
         ,"description": "North American Industry Classification System Filter. Enter two to six digits to filter results to facilities having matching NAICS codes.  Digits less than six will match to all codes beginning with the provided values."
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_ncs": {
          "name": "p_ncs"
         ,"in": "formData"
         ,"description": "North American Industry Classification System Filter. Enter two to six digits to filter results to facilities having matching NAICS codes.  Digits less than six will match to all codes beginning with the provided values."
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_opst": {
          "name": "p_opst"
         ,"in": "query"
         ,"description": "Operating status filter.  Enter one or more operating status codes to limit results.   Provide multiple codes as a comma-delimited list."
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_opst": {
          "name": "p_opst"
         ,"in": "formData"
         ,"description": "Operating status filter.  Enter one or more operating status codes to limit results.   Provide multiple codes as a comma-delimited list."
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_maj": {
          "name": "p_maj"
         ,"in": "query"
         ,"description": "Major Facility Flag.  Enter Y to restrict results to Major facilities only."
         ,"enum": [
             "Y"
            ,"N"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_maj": {
          "name": "p_maj"
         ,"in": "formData"
         ,"description": "Major Facility Flag.  Enter Y to restrict results to Major facilities only."
         ,"enum": [
             "Y"
            ,"N"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_fea": {
          "name": "p_fea"
         ,"in": "query"
         ,"description": "Formal Enforcement Actions [within \/ not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay.\n- W = within date range\n- N = not within date range"
         ,"enum": [
             "W"
            ,"N"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_fea": {
          "name": "p_fea"
         ,"in": "formData"
         ,"description": "Formal Enforcement Actions [within \/ not within] specified date range indicator. The date range is determined by parameters p_fead1 and p_fead2 or by parameter p_feay.\n- W = within date range\n- N = not within date range"
         ,"enum": [
             "W"
            ,"N"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_feay": {
          "name": "p_feay"
         ,"in": "query"
         ,"description": "Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified."
         ,"enum": [
             1
            ,2
            ,3
            ,4
            ,5
         ]
         ,"type": "number"
         ,"required": false
      }
      ,"f.queryset": {
          "name": "queryset"
         ,"in": "formData"
         ,"description": "Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000."
         ,"type": "number"
         ,"required": false
      }
      ,"q.queryset": {
          "name": "queryset"
         ,"in": "query"
         ,"description": "Query Limiter.  Enter a value to limit the number of records returned for each query. Value cannot exceed 70,000."
         ,"type": "number"
         ,"required": false
      }
      ,"f.p_feay": {
          "name": "p_feay"
         ,"in": "formData"
         ,"description": "Years (1 to 5) Range.  This value is used to create a date range for Formal Enforcement Actions (FEA). Used along with p_fea (which indicates whether to look within or outside of the date range) to find FEAs within (or not within) the number of years specified."
         ,"enum": [
             1
            ,2
            ,3
            ,4
            ,5
         ]
         ,"type": "number"
         ,"required": false
      }
      ,"q.p_feaa": {
          "name": "p_feaa"
         ,"in": "query"
         ,"description": "Agency associated with Formal Enforcement Actions:\n- E = EPA\n- S = State\n- A = All"
         ,"enum": [
             "A"
            ,"E"
            ,"S"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.responseset": {
          "name": "responseset"
         ,"in": "formData"
         ,"description": "Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000."
         ,"type": "number"
         ,"required": false
      }
      ,"q.responseset": {
          "name": "responseset"
         ,"in": "query"
         ,"description": "Response Set Limiter. Enter a value to limit the number of records per page. Value cannot exceed 1,000."
         ,"type": "number"
         ,"required": false
      }
      ,"f.p_feaa": {
          "name": "p_feaa"
         ,"in": "formData"
         ,"description": "Agency associated with Formal Enforcement Actions:\n- E = EPA\n- S = State\n- A = All"
         ,"enum": [
             "A"
            ,"E"
            ,"S"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_iea": {
          "name": "p_iea"
         ,"in": "query"
         ,"description": "Informal Enforcement Actions [within \/ not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay.\n- W = within date range\n- N = not within date range"
         ,"enum": [
             "W"
            ,"N"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_iea": {
          "name": "p_iea"
         ,"in": "formData"
         ,"description": "Informal Enforcement Actions [within \/ not within] specified date range.  The date range is determined by parameters p_iead1 and p_iead2 or by parameter p_ieay.\n- W = within date range\n- N = not within date range"
         ,"enum": [
             "W"
            ,"N"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_ieay": {
          "name": "p_ieay"
         ,"in": "query"
         ,"description": "Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified."
         ,"enum": [
             1
            ,2
            ,3
            ,4
            ,5
         ]
         ,"type": "number"
         ,"required": false
      }
      ,"f.p_ieay": {
          "name": "p_ieay"
         ,"in": "formData"
         ,"description": "Years (1 to 5) Range.  This value is used to create a date range for Informal Enforcement Actions (IEA). Used along with p_iea (which indicates whether to look within or outside of the date range) to find IEAs within (or not within) the number of years specified."
         ,"enum": [
             1
            ,2
            ,3
            ,4
            ,5
         ]
         ,"type": "number"
         ,"required": false
      }
      ,"q.p_ieaa": {
          "name": "p_ieaa"
         ,"in": "query"
         ,"description": "Agency associated with Informal Enforcement Actions. If left blank, both agencies are included.\n- E = EPA\n- S = State"
         ,"enum": [
             "E"
            ,"S"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_ieaa": {
          "name": "p_ieaa"
         ,"in": "formData"
         ,"description": "Agency associated with Informal Enforcement Actions. If left blank, both agencies are included.\n- E = EPA\n- S = State"
         ,"enum": [
             "E"
            ,"S"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_pd": {
          "name": "p_pd"
         ,"in": "query"
         ,"description": "Population Density Limiter (per sq mile). Enter a value to limit results to facilities located in area of a given population density.\n- NONE = 0 population density per square mile\n- GT100 = More than 100 population density per square mile\n- GT500 = More than 500 population density per square mile\n- GT1000 = More than 1000 population density per square mile\n- GT5000 = More than 5000 population density per square mile\n- GT10000 = More than 10000 population density per square mile\n- GT20000 = More than 20000 population density per square mile"
         ,"enum": [
             "NONE"
            ,"GT100"
            ,"GT500"
            ,"GT1000"
            ,"GT5000"
            ,"GT10000"
            ,"GT20000"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_pd": {
          "name": "p_pd"
         ,"in": "formData"
         ,"description": "Population Density Limiter (per sq mile). Enter a value to limit results to facilities located in area of a given population density.\n- NONE = 0 population density per square mile\n- GT100 = More than 100 population density per square mile\n- GT500 = More than 500 population density per square mile\n- GT1000 = More than 1000 population density per square mile\n- GT5000 = More than 5000 population density per square mile\n- GT10000 = More than 10000 population density per square mile\n- GT20000 = More than 20000 population density per square mile"
         ,"enum": [
             "NONE"
            ,"GT100"
            ,"GT500"
            ,"GT1000"
            ,"GT5000"
            ,"GT10000"
            ,"GT20000"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_ysl": {
          "name": "p_ysl"
         ,"in": "query"
         ,"description": "Last Facility Inspection [within \/ not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly.\n- W = within date range\n- N = not within date range"
         ,"enum": [
             "W"
            ,"N"
            ,"NV"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_ysl": {
          "name": "p_ysl"
         ,"in": "formData"
         ,"description": "Last Facility Inspection [within \/ not within] Specified Date Range Indicator. The date range is determined by parameters p_idt1 and p_idt2 or by parameter p_ysly.\n- W = within date range\n- N = not within date range"
         ,"enum": [
             "W"
            ,"N"
            ,"NV"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_ysly": {
          "name": "p_ysly"
         ,"in": "query"
         ,"description": "Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year."
         ,"enum": [
             "1"
            ,"2"
            ,"3"
            ,"4"
            ,"5"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_ysly": {
          "name": "p_ysly"
         ,"in": "formData"
         ,"description": "Number of years (1 to 5) since last facility inspection.  A value of 1 means that it has been inspected within the year."
         ,"enum": [
             "1"
            ,"2"
            ,"3"
            ,"4"
            ,"5"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_ysla": {
          "name": "p_ysla"
         ,"in": "query"
         ,"description": "Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results:\n- E = EPA\n- S = State"
         ,"enum": [
             "E"
            ,"S"
            ,"A"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_ysla": {
          "name": "p_ysla"
         ,"in": "formData"
         ,"description": "Facility Last Inspection Code Filter.  If left blank, both agencies are included.  Enter a value to limit results:\n- E = EPA\n- S = State"
         ,"enum": [
             "E"
            ,"S"
            ,"A"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_tribedist": {
          "name": "p_tribedist"
         ,"in": "query"
         ,"description": "Proximity to tribal land limiter. Enter an amount of mile between 0 and 25 to filter results.  This parameter is only evaluated if p_tribeid is populated."
         ,"type": "number"
         ,"required": false
      }
      ,"f.p_tribedist": {
          "name": "p_tribedist"
         ,"in": "formData"
         ,"description": "Proximity to tribal land limiter. Enter an amount of mile between 0 and 25 to filter results.  This parameter is only evaluated if p_tribeid is populated."
         ,"type": "number"
         ,"required": false
      }
      ,"q.tablelist": {
          "name": "tablelist"
         ,"in": "query"
         ,"description": "Table List Flag. Enter a Y to display the first page of facility results."
         ,"enum": [
             "Y"
            ,"N"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.tablelist": {
          "name": "tablelist"
         ,"in": "formData"
         ,"description": "Table List Flag. Enter a Y to display the first page of facility results."
         ,"enum": [
             "Y"
            ,"N"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"q.summarylist": {
          "name": "summarylist"
         ,"in": "query"
         ,"description": "Summary List Flag.  Enter a Y to return a list of summary statistics based on the parameters submitted to the query service."
         ,"enum": [
             "Y"
            ,"N"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.summarylist": {
          "name": "summarylist"
         ,"in": "formData"
         ,"description": "Summary List Flag.  Enter a Y to return a list of summary statistics based on the parameters submitted to the query service."
         ,"enum": [
             "Y"
            ,"N"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"q.qid": {
          "name": "qid"
         ,"in": "query"
         ,"description": "Query ID Selector.  Enter the QueryID number from a previously run query."
         ,"type": "string"
         ,"required": true
      }
      ,"f.qid": {
          "name": "qid"
         ,"in": "formData"
         ,"description": "Query ID Selector.  Enter the QueryID number from a previously run query."
         ,"type": "string"
         ,"required": true
      }
      ,"q.pageno": {
          "name": "pageno"
         ,"in": "query"
         ,"description": "Indicates the number of the page to display. It is used only when the results are paginated."
         ,"default": 1
         ,"type": "number"
         ,"required": false
      }
      ,"f.pageno": {
          "name": "pageno"
         ,"in": "formData"
         ,"description": "Indicates the number of the page to display. It is used only when the results are paginated."
         ,"default": 1
         ,"type": "number"
         ,"required": false
      }
      ,"q.newsort": {
          "name": "newsort"
         ,"in": "query"
         ,"description": "Output Sort Column.  Enter the number of the column on which the data will be sorted. If unpopulated results will sort on the first column."
         ,"type": "number"
         ,"required": false
      }
      ,"f.newsort": {
          "name": "newsort"
         ,"in": "formData"
         ,"description": "Output Sort Column.  Enter the number of the column on which the data will be sorted. If unpopulated results will sort on the first column."
         ,"type": "number"
         ,"required": false
      }
      ,"q.descending": {
          "name": "descending"
         ,"in": "query"
         ,"description": "Output Sort Column Descending Flag.  Enter Y to column identified in the newsort parameter descending.  Enter N to use ascending sort order. Used only when newsort parameter is populated."
         ,"enum": [
             "Y"
            ,"N"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.descending": {
          "name": "descending"
         ,"in": "formData"
         ,"description": "Output Sort Column Descending Flag.  Enter Y to column identified in the newsort parameter descending.  Enter N to use ascending sort order. Used only when newsort parameter is populated."
         ,"enum": [
             "Y"
            ,"N"
         ]
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_pol_any_amt": {
          "name": "p_pol_any_amt"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_pol_any_amt": {
          "name": "p_pol_any_amt"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_naa_pol_cor": {
          "name": "p_naa_pol_cor"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_naa_pol_cor": {
          "name": "p_naa_pol_cor"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_ghgftype": {
          "name": "p_ghgftype"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_ghgftype": {
          "name": "p_ghgftype"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_eisftype": {
          "name": "p_eisftype"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_eisftype": {
          "name": "p_eisftype"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.polltable": {
          "name": "polltable"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.polltable": {
          "name": "polltable"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_program": {
          "name": "p_program"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_program": {
          "name": "p_program"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_pol_maj": {
          "name": "p_pol_maj"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_pol_maj": {
          "name": "p_pol_maj"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_pol_amt": {
          "name": "p_pol_amt"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_pol_amt": {
          "name": "p_pol_amt"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_naa_sev": {
          "name": "p_naa_sev"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_naa_sev": {
          "name": "p_naa_sev"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_naa_pol": {
          "name": "p_naa_pol"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_naa_pol": {
          "name": "p_naa_pol"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_ghgsub": {
          "name": "p_ghgsub"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_ghgsub": {
          "name": "p_ghgsub"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_frsflg": {
          "name": "p_frsflg"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_frsflg": {
          "name": "p_frsflg"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_cms": {
          "name": "p_cms"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_cms": {
          "name": "p_cms"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_met": {
          "name": "p_met"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_met": {
          "name": "p_met"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_mic": {
          "name": "p_mic"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_mic": {
          "name": "p_mic"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_rpo": {
          "name": "p_rpo"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_rpo": {
          "name": "p_rpo"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_scc": {
          "name": "p_scc"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_scc": {
          "name": "p_scc"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_pcat": {
          "name": "p_pcat"
         ,"in": "query"
         ,"type": "string"
         ,"required": false
      }
      ,"f.p_pcat": {
          "name": "p_pcat"
         ,"in": "formData"
         ,"type": "string"
         ,"required": false
      }
      ,"q.p_year": {
          "name": "p_year"
         ,"in": "query"
         ,"description": "The calendar year for the annual pollutant loadings. "
         ,"default": "2018"
         ,"type": "string"
         ,"required": true
      }
      ,"f.p_year": {
          "name": "p_year"
         ,"in": "formData"
         ,"description": "The calendar year for the annual pollutant loadings. "
         ,"default": "2018"
         ,"type": "string"
         ,"required": true
      }
      ,"q.qcolumns": {
          "name": "qcolumns"
         ,"in": "query"
         ,"description": "Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions."
         ,"type": "string"
         ,"required": false
      }
      ,"f.qcolumns": {
          "name": "qcolumns"
         ,"in": "formData"
         ,"description": "Used to customize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions."
         ,"type": "string"
         ,"required": false
      }
   }
   ,"paths": {
       "\/ecatt_nif_rest_services.get_facilities": {
          "get": {
             "summary": "Placeholder"
            ,"parameters": [
                {
                   "$ref": "#\/parameters\/q.output"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_program"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_year"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_pcat"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_pol_amt"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_maj"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_pol_any_amt"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_pol_maj"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_opst"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_zip"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_reg"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_rpo"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_st"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_fips"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_ct"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_tribedist"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_met"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_mic"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_naa_pol"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_naa_sev"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_naa_pol_cor"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_pd"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_frsflg"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_ncs"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_scc"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_eisftype"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_ghgftype"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_ghgsub"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_cms"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_ysl"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_ysly"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_ysla"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_fea"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_feay"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_feaa"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_iea"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_ieay"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_ieaa"
               }
               ,{
                   "$ref": "#\/parameters\/q.queryset"
               }
               ,{
                   "$ref": "#\/parameters\/q.responseset"
               }
               ,{
                   "$ref": "#\/parameters\/q.tablelist"
               }
               ,{
                   "$ref": "#\/parameters\/q.summarylist"
               }
               ,{
                   "$ref": "#\/parameters\/q.callback"
               }
               ,{
                   "$ref": "#\/parameters\/q.qcolumns"
               }
            ]
            ,"tags": [
                "ECATT NIF"
            ]
            ,"responses": {
             "200": {
                "description": "Results"
               ,"schema": {
                   "type": "object"
                  ,"description": "Root Object"
                  ,"xml": {
                      "name": "Root"
                  }
                  ,"properties": {
                      "Results": {
                         "$ref": "#\/definitions\/ecnf01"
                     }
                  }
                  ,"required": [
                      "Results"
                  ]
               }
            }
            }
         }
         ,"post": {
             "summary": "Placeholder"
            ,"parameters": [
                {
                   "$ref": "#\/parameters\/f.output"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_program"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_year"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_pcat"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_pol_amt"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_maj"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_pol_any_amt"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_pol_maj"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_opst"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_zip"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_reg"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_rpo"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_st"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_fips"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_ct"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_tribedist"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_met"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_mic"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_naa_pol"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_naa_sev"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_naa_pol_cor"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_pd"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_frsflg"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_ncs"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_scc"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_eisftype"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_ghgftype"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_ghgsub"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_cms"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_ysl"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_ysly"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_ysla"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_fea"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_feay"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_feaa"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_iea"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_ieay"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_ieaa"
               }
               ,{
                   "$ref": "#\/parameters\/f.queryset"
               }
               ,{
                   "$ref": "#\/parameters\/f.responseset"
               }
               ,{
                   "$ref": "#\/parameters\/f.tablelist"
               }
               ,{
                   "$ref": "#\/parameters\/f.summarylist"
               }
               ,{
                   "$ref": "#\/parameters\/f.callback"
               }
               ,{
                   "$ref": "#\/parameters\/f.qcolumns"
               }
            ]
            ,"tags": [
                "ECATT NIF"
            ]
            ,"responses": {
             "200": {
                "description": "Results"
               ,"schema": {
                   "type": "object"
                  ,"description": "Root Object"
                  ,"xml": {
                      "name": "Root"
                  }
                  ,"properties": {
                      "Results": {
                         "$ref": "#\/definitions\/ecnf01"
                     }
                  }
                  ,"required": [
                      "Results"
                  ]
               }
            }
            }
         }
      }
      ,"\/ecatt_nif_rest_services.get_qid": {
          "get": {
             "summary": "Placeholder"
            ,"parameters": [
                {
                   "$ref": "#\/parameters\/q.output"
               }
               ,{
                   "$ref": "#\/parameters\/q.qid"
               }
               ,{
                   "$ref": "#\/parameters\/q.pageno"
               }
               ,{
                   "$ref": "#\/parameters\/q.p_id"
               }
               ,{
                   "$ref": "#\/parameters\/q.callback"
               }
               ,{
                   "$ref": "#\/parameters\/q.polltable"
               }
               ,{
                   "$ref": "#\/parameters\/q.newsort"
               }
               ,{
                   "$ref": "#\/parameters\/q.descending"
               }
               ,{
                   "$ref": "#\/parameters\/q.qcolumns"
               }
            ]
            ,"tags": [
                "ECATT NIF"
            ]
            ,"responses": {
             "200": {
                "description": "Results"
               ,"schema": {
                   "type": "object"
                  ,"description": "Root Object"
                  ,"xml": {
                      "name": "Root"
                  }
                  ,"properties": {
                      "Results": {
                         "$ref": "#\/definitions\/ecnf02"
                     }
                  }
                  ,"required": [
                      "Results"
                  ]
               }
            }
            }
         }
         ,"post": {
             "summary": "Placeholder"
            ,"parameters": [
                {
                   "$ref": "#\/parameters\/f.qid"
               }
               ,{
                   "$ref": "#\/parameters\/f.pageno"
               }
               ,{
                   "$ref": "#\/parameters\/f.p_id"
               }
               ,{
                   "$ref": "#\/parameters\/f.callback"
               }
               ,{
                   "$ref": "#\/parameters\/f.polltable"
               }
               ,{
                   "$ref": "#\/parameters\/f.newsort"
               }
               ,{
                   "$ref": "#\/parameters\/f.descending"
               }
               ,{
                   "$ref": "#\/parameters\/f.qcolumns"
               }
            ]
            ,"tags": [
                "ECATT NIF"
            ]
            ,"responses": {
             "200": {
                "description": "Results"
               ,"schema": {
                   "type": "object"
                  ,"description": "Root Object"
                  ,"xml": {
                      "name": "Root"
                  }
                  ,"properties": {
                      "Results": {
                         "$ref": "#\/definitions\/ecnf02"
                     }
                  }
                  ,"required": [
                      "Results"
                  ]
               }
            }
            }
         }
      }
      ,"\/ecatt_nif_rest_services.get_download": {
          "get": {
             "summary": "Placeholder"
            ,"parameters": [
                {
                   "$ref": "#\/parameters\/q.qid"
               }
               ,{
                   "$ref": "#\/parameters\/q.qcolumns"
               }
            ]
            ,"tags": [
                "ECATT NIF"
            ]
            ,"responses": {
             "200": {
                "description": "Results"
               ,"schema": {
                   "type": "file"
               }
            }
            }
         }
         ,"post": {
             "summary": "Placeholder"
            ,"parameters": [
                {
                   "$ref": "#\/parameters\/f.qid"
               }
               ,{
                   "$ref": "#\/parameters\/f.qcolumns"
               }
            ]
            ,"tags": [
                "ECATT NIF"
            ]
            ,"responses": {
             "200": {
                "description": "Results"
               ,"schema": {
                   "type": "file"
               }
            }
            }
         }
      }
      ,"\/ecatt_nif_rest_services.metadata": {
          "get": {
             "summary": "Placeholder"
            ,"parameters": [
                {
                   "$ref": "#\/parameters\/q.output"
               }
               ,{
                   "$ref": "#\/parameters\/q.callback"
               }
            ]
            ,"tags": [
                "ECATT NIF"
            ]
            ,"responses": {
             "200": {
                "description": "Results"
               ,"schema": {
                   "type": "object"
                  ,"description": "Root Object"
                  ,"xml": {
                      "name": "Root"
                  }
                  ,"properties": {
                      "Results": {
                         "$ref": "#\/definitions\/meta1"
                     }
                  }
                  ,"required": [
                      "Results"
                  ]
               }
            }
            }
         }
         ,"post": {
             "summary": "Placeholder"
            ,"parameters": [
                {
                   "$ref": "#\/parameters\/f.output"
               }
               ,{
                   "$ref": "#\/parameters\/f.callback"
               }
            ]
            ,"tags": [
                "ECATT NIF"
            ]
            ,"responses": {
             "200": {
                "description": "Results"
               ,"schema": {
                   "type": "object"
                  ,"description": "Root Object"
                  ,"xml": {
                      "name": "Root"
                  }
                  ,"properties": {
                      "Results": {
                         "$ref": "#\/definitions\/meta1"
                     }
                  }
                  ,"required": [
                      "Results"
                  ]
               }
            }
            }
         }
      }
   }
   ,"definitions": {
       "DEF.ecatt_nif_rest_services.Columns": {
          "type": "object"
         ,"description": "Columns Object"
         ,"xml": {
             "name": "Data"
         }
         ,"properties": {
             "columnID": {
                "type": "string"
            }
            ,"fieldName": {
                "type": "string"
            }
            ,"tagName": {
                "type": "string"
            }
         }
         ,"required": [
             "columnID"
            ,"fieldName"
            ,"tagName"
         ]
      }
      ,"DEF.ecatt_nif_rest_services.get_facilities.Facilities": {
          "type": "object"
         ,"description": "Facilities Object"
         ,"xml": {
             "name": "Facility"
         }
         ,"properties": {
             "RegistryID": {
                "type": "string"
               ,"title": "FRS ID"
               ,"example": "110020837601"
               ,"description": "An internal 12-digit Facility Registry Service (FRS) tracking number used to tie all facility data together in EPA regulatory program databases."
            }
            ,"FacName": {
                "type": "string"
               ,"title": "Facility Name"
               ,"example": "W M A T A CENTRAL MAINT FAC"
               ,"description": "Name of facility"
            }
            ,"FacCity": {
                "type": "string"
               ,"title": "Facility City"
               ,"example": "ALEXANDRIA"
               ,"description": "The city where the facility is located."
            }
            ,"FacState": {
                "type": "string"
               ,"title": "Facility State"
               ,"example": "VA"
               ,"description": "Facility state"
            }
            ,"FacZip": {
                "type": "string"
               ,"title": "Facility Zip Code"
               ,"example": "22314"
               ,"description": "Facility ZIP code"
            }
            ,"FacCounty": {
                "type": "string"
               ,"title": "Facility County"
               ,"example": "ALEXANDRIA CITY"
               ,"description": "The county where the facility is located."
            }
            ,"FIPSCode": {
                "type": "string"
            }
            ,"FacEPARegion": {
                "type": "string"
               ,"title": "Facility EPA Region"
               ,"example": "03"
               ,"description": "The EPA region where the facility is located. EPA has 10 regional offices that execute programs within several states and territories"
            }
            ,"FacRpo": {
                "type": "string"
            }
            ,"FacLat": {
                "type": "string"
               ,"title": "Latitude"
               ,"example": "38.803076"
               ,"description": "The latitude of the facility in decimal degrees expressed using the NAD83 horizontal datum. The coordinate comes from the FRS EPA Locational Reference Tables (LRT) file which represents the most accurate value for the facility based on the available spatial metadata."
            }
            ,"FacLong": {
                "type": "string"
               ,"title": "Longitude"
               ,"example": "-77.085951"
               ,"description": "The longitude of the facility in decimal degrees expressed using the NAD83 horizontal datum. The coordinate comes from the FRS EPA Locational Reference Tables (LRT) file which represents the most accurate value for the facility based on the available spatial metadata."
            }
            ,"FederalAgency": {
                "type": "string"
            }
            ,"LocalControlRegionName": {
                "type": "string"
               ,"title": "Local Control Region Name"
               ,"description": "Regions within a state. Search criteria for DFR in OTIS."
            }
            ,"PopulationDensity": {
                "type": "string"
               ,"title": "Population Density"
               ,"example": "5,602\/sq.mi."
               ,"description": "The number of persons per square mile in the area being profiled. This field is the ratio of total persons (displayed in the Total Persons field) to total land area (displayed in the Land Area field)"
            }
            ,"OzoneNonAttainment": {
                "type": "string"
            }
            ,"PmNonAttainment": {
                "type": "string"
            }
            ,"LeadNonAttainment": {
                "type": "string"
            }
            ,"SO2NonAttainment": {
                "type": "string"
            }
            ,"TRIbeDistance": {
                "type": "string"
            }
            ,"AirIndianCntryFlg": {
                "type": "string"
            }
            ,"FacIndianCntryFlg": {
                "type": "string"
               ,"title": "Facility Indian Country Flag"
               ,"description": "Flag showing Y\/N whether the facility is located in Indian Country."
            }
            ,"FacIndianSpatialFlg": {
                "type": "string"
               ,"title": "Indian Spatial Flag"
               ,"example": "Y"
               ,"description": "Returns \u201CY\u201D if a facility is located within a tribal spatial boundary as defined by the U.S. Census Bureau 2010 tribal boundary layer data for tribes in the lower 48 states and Bureau of Land Management Alaska State Office data for native villages in Alaska. Returns \u201CN\u201D if a facility is not located within a tribal or native Alaskan village area."
            }
            ,"CAACurrHpv": {
                "type": "string"
            }
            ,"AirCurrComplStatus": {
                "type": "string"
            }
            ,"OperatingStatus": {
                "type": "string"
            }
            ,"OperatingStatusCode": {
                "type": "string"
            }
            ,"FacilityDesignation": {
                "type": "string"
            }
            ,"FacDesignationCode": {
                "type": "string"
            }
            ,"CAAEvalCnt": {
                "type": "string"
            }
            ,"CAAFeaCnt": {
                "type": "string"
            }
            ,"CAAInfrmlCnt": {
                "type": "string"
            }
            ,"LastEvalDate": {
                "type": "string"
            }
            ,"LastEvalDateEPA": {
                "type": "string"
            }
            ,"LastEvalDateState": {
                "type": "string"
            }
            ,"LastFeaDate": {
                "type": "string"
            }
            ,"LastFeaDateEPA": {
                "type": "string"
            }
            ,"LastFeaDateState": {
                "type": "string"
            }
            ,"LastIeaDate": {
                "type": "string"
            }
            ,"LastIeaDateEPA": {
                "type": "string"
            }
            ,"LastIeaDateState": {
                "type": "string"
            }
            ,"NaicsCodes": {
                "type": "string"
            }
            ,"AirCmsCategoryDesc": {
                "type": "string"
            }
            ,"AirIDs": {
                "type": "string"
               ,"title": "AIR Facility System ID"
               ,"description": "Air Facility System (AFS) ID."
            }
            ,"SelectedThreshold": {
                "type": "string"
            }
            ,"PollutantCount": {
                "type": "string"
            }
            ,"PollutantsOverThreshold": {
                "type": "string"
            }
            ,"MaxScore": {
                "type": "string"
               ,"title": "Max Score"
               ,"example": "1"
               ,"description": "A sorting score for internal use."
            }
         }
         ,"required": [
             "RegistryID"
            ,"FacName"
            ,"FacCity"
            ,"FacState"
            ,"FacZip"
            ,"FacCounty"
            ,"FIPSCode"
            ,"FacEPARegion"
            ,"FacRpo"
            ,"FacLat"
            ,"FacLong"
            ,"FederalAgency"
            ,"LocalControlRegionName"
            ,"PopulationDensity"
            ,"OzoneNonAttainment"
            ,"PmNonAttainment"
            ,"LeadNonAttainment"
            ,"SO2NonAttainment"
            ,"TRIbeDistance"
            ,"AirIndianCntryFlg"
            ,"FacIndianCntryFlg"
            ,"FacIndianSpatialFlg"
            ,"CAACurrHpv"
            ,"AirCurrComplStatus"
            ,"OperatingStatus"
            ,"OperatingStatusCode"
            ,"FacilityDesignation"
            ,"FacDesignationCode"
            ,"CAAEvalCnt"
            ,"CAAFeaCnt"
            ,"CAAInfrmlCnt"
            ,"LastEvalDate"
            ,"LastEvalDateEPA"
            ,"LastEvalDateState"
            ,"LastFeaDate"
            ,"LastFeaDateEPA"
            ,"LastFeaDateState"
            ,"LastIeaDate"
            ,"LastIeaDateEPA"
            ,"LastIeaDateState"
            ,"NaicsCodes"
            ,"AirCmsCategoryDesc"
            ,"AirIDs"
            ,"SelectedThreshold"
            ,"PollutantCount"
            ,"PollutantsOverThreshold"
            ,"MaxScore"
         ]
      }
      ,"ecnf01": {
          "type": "object"
         ,"description": "Results Object"
         ,"properties": {
             "Message": {
                "type": "string"
               ,"title": "Message"
               ,"example": "Success"
               ,"description": "Field to record messages (typically performance-related) about packet processing"
            }
            ,"QueryRows": {
                "type": "string"
               ,"title": "Query Row Count"
               ,"example": "5"
               ,"description": "Number of query results returned"
            }
            ,"MajorRows": {
                "type": "string"
            }
            ,"MinorRows": {
                "type": "string"
            }
            ,"SyntheticRows": {
                "type": "string"
            }
            ,"UnknownRows": {
                "type": "string"
            }
            ,"NoPermitRows": {
                "type": "string"
            }
            ,"QueryID": {
                "type": "string"
               ,"title": "Query Identifier"
               ,"example": "245"
               ,"description": "Sequential number assigned to entire search result"
            }
            ,"PollQueryID": {
                "type": "string"
            }
            ,"PollRptQueryID": {
                "type": "string"
            }
            ,"PollRptCount": {
                "type": "string"
            }
            ,"PageNo": {
                "type": "string"
               ,"title": "Page Number"
               ,"example": "1"
               ,"description": "The number of pages of results returned"
            }
            ,"Columns": {
                "type": "array"
               ,"title": "Columns"
               ,"items": {
                   "$ref": "#\/definitions\/DEF.ecatt_nif_rest_services.Columns"
               }
               ,"xml": {
                   "name": "Columns"
                  ,"wrapped": true
               }
            }
            ,"Facilities": {
                "type": "array"
               ,"title": "Facilities"
               ,"items": {
                   "$ref": "#\/definitions\/DEF.ecatt_nif_rest_services.get_facilities.Facilities"
               }
               ,"xml": {
                   "name": "Facilities"
                  ,"wrapped": true
               }
            }
         }
         ,"required": [
             "Message"
            ,"QueryRows"
            ,"MajorRows"
            ,"MinorRows"
            ,"SyntheticRows"
            ,"UnknownRows"
            ,"NoPermitRows"
            ,"QueryID"
            ,"PollQueryID"
            ,"PollRptQueryID"
            ,"PollRptCount"
            ,"PageNo"
            ,"Columns"
            ,"Facilities"
         ]
      }
      ,"ecnf02": {
          "type": "object"
         ,"description": "Results Object"
         ,"properties": {
             "Message": {
                "type": "string"
               ,"title": "Message"
               ,"example": "Success"
               ,"description": "Field to record messages (typically performance-related) about packet processing"
            }
            ,"QueryRows": {
                "type": "string"
               ,"title": "Query Row Count"
               ,"example": "5"
               ,"description": "Number of query results returned"
            }
            ,"QueryID": {
                "type": "string"
               ,"title": "Query Identifier"
               ,"example": "245"
               ,"description": "Sequential number assigned to entire search result"
            }
            ,"PageNo": {
                "type": "string"
               ,"title": "Page Number"
               ,"example": "1"
               ,"description": "The number of pages of results returned"
            }
            ,"Facilities": {
                "type": "array"
               ,"title": "Facilities"
               ,"items": {
                   "$ref": "#\/definitions\/DEF.ecatt_nif_rest_services.get_facilities.Facilities"
               }
               ,"xml": {
                   "name": "Facilities"
                  ,"wrapped": true
               }
            }
         }
         ,"required": [
             "Message"
            ,"QueryRows"
            ,"QueryID"
            ,"PageNo"
            ,"Facilities"
         ]
      }
      ,"meta2": {
          "type": "object"
         ,"description": "Results Column Object"
         ,"xml": {
             "name": "ResultColumn"
         }
         ,"properties": {
             "ColumnName": {
                "type": "string"
               ,"title": "Column Name"
            }
            ,"DataType": {
                "type": "string"
               ,"title": "Data Type"
               ,"example": "NUMBER"
               ,"description": "Data type for EPA program database column."
            }
            ,"DataLength": {
                "type": "string"
               ,"title": "Data Length"
               ,"example": "10"
               ,"description": "Data length for EPA program database column."
            }
            ,"ColumnID": {
                "type": "string"
               ,"title": "Column ID"
            }
            ,"ObjectName": {
                "type": "string"
               ,"title": "Object Name"
               ,"example": "CaseName"
               ,"description": "The JSON name used for the database column."
            }
            ,"Description": {
                "type": "string"
               ,"title": "Column Description"
            }
         }
         ,"required": [
             "ColumnName"
            ,"DataType"
            ,"DataLength"
            ,"ColumnID"
            ,"ObjectName"
            ,"Description"
         ]
      }
      ,"meta1": {
          "type": "object"
         ,"description": "Results Object"
         ,"properties": {
             "Message": {
                "type": "string"
               ,"title": "Message"
               ,"example": "Success"
               ,"description": "Field to record messages (typically performance-related) about packet processing"
            }
            ,"ResultColumns": {
                "type": "array"
               ,"title": "Result Columns"
               ,"items": {
                   "$ref": "#\/definitions\/meta2"
               }
               ,"xml": {
                   "name": "ResultColumns"
                  ,"wrapped": true
               }
            }
         }
         ,"required": [
             "Message"
         ]
      }
   }
}